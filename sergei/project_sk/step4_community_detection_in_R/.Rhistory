true == T
1 > 0 == T
1 + 5
1 + 5 > 6
1 + 5 > 6 == T
install.packages("Rcmdr")
windows()
q <- c(1, 3, 7, 15, 29, 40, 37, 26, 13, 6, 1)
barplot(q)
library("cluster", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:cluster", unload=TRUE)
library("cluster", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:cluster", unload=TRUE)
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:car", unload=TRUE)
names(q) <- c('a', 'b','c','d','f','e','h','j','k','tt','uj')
install.packages(c("boot", "foreign", "manipulate", "MASS", "mgcv", "nlme"))
barplot(q)
q <- c(1, 3, 7, 15, 29, 40, 37, 26, 13, 6, 1)
q
q
sqrt(q)
plot(sqrt(q))
x <- seq(1, 20, 0.1)
y <- sin(x)
plot(x,y)
matrix(0, 3, 4)
a <- seq(1, 24, 2)
a
a
m <- matrix(a, 3, 4)
plot(m)
m
elevation <- matrix(1, 10, 10)
elevation[4, 6] <- 0
View(elevation)
print(elevation)
contour(elevation)
elevation[1,1] <- 0
contour(elevation)
elevation[1,1] <- 1.2
persp(elevation)
persp(elevation, expand=0.2)
contour(volcano)
volcano
v <- volcano
length(v)
persp(v, expand=0.5)
persp(v, expand=0.2)
persp(v, expand=0.1)
persp(v, expand=0.6)
persp(v, expand=0.05)
persp(v, expand=0.15)
image(v)
vv <- sin(v)
image(vv)
persp(vv, expand=0.15)
persp(vv, expand=0.2)
persp(vv, expand=0.05)
barplot(v)
barplot(vv)
barplot(v)
abline(h = median(v))
barplot(m)
barplot(y)
barplot(q)
abline(h = median(q))
abline(h = mean(q))
sd(q)
abline(h = mean(q) + sd(q))
plot(q)
plot(q, 1:11)
plot(q)
help(plot)
help(cor.test)
install.packages("ggplot2")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
help(package = "ggplot2")
weights <- c(300, 200, 100, 250, 150)
weights <- c(300, 200, 100, 250, 150)
prices <- c(9000, 5000, 12000, 7500, 18000)
chests <- c('gold', 'silver', 'gems', 'gold', 'gems')
types <- factor(chests)
qplot(weights, prices)
qplot(weights, prices, color = types)
help(qplot)
qplot(weights, prices, color = types, margins = T)
qplot(q)
qplot(weights, prices)
qplot(weights, prices, color = types)
qplot(weights, prices, color = cyl)
qplot(weights, prices, color = types)
install.packages("igraph")
install.packages("igraphdata")
library(igraph)
detach("package:igraph", unload=TRUE)
library("igraph", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
q()
q()
q()
library(plotly)
Sys.setenv("plotly_api_key"="n7hq9dwcgf")
library(plotly)
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity), mode = "markers", color = carat, size = carat)
library(plotly)
library(plotly)
library(plotly)
library(plotly)
Sys.setenv("plotly_api_key"="4kjji2cr29")
library(plotly)
library(plotly)
detach("package:ggplot2", unload=TRUE)
detach("package:plotly", unload=TRUE)
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:ggplot2", unload=TRUE)
library(plotly)
ggplotly()
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
mode = "markers", color = carat, size = carat)
plot_ly()
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity), mode = "markers", color = carat, size = carat)
install.packages(c("class", "foreign", "MASS", "nlme", "nnet", "spatial"))
setwd('/Applications/MAMP/htdocs/lesmiserables_DATA/sergei/project_sk/step4_community_detection_in_R/')
getwd()
library(igraph)
misgraph = read.graph("jean-complete.gml", format = ("gml"))
misgraph.e
misgraph[1]
misgraph[0]
misgraph[33]
misgraph[22]
misgraph[2]
misgraph[202]
misgraph[179]
ebc <- edge.betweenness.community
ebc <- edge.betweenness.community(misgraph, directed = FALSE)
V(misgraph)$color <- ebc$membership
write.graph(misgraph, "jean-complete-NG.gml", format = ("gml"))
getwd()
misgraph = read.graph("jean-complete.gml", format=("gml"))
ebc <- edge.betweenness.community(misgraph, directed=F)
V(misgraph)$color <- ebc$membership
write.graph(misgraph, "jean-complete-newmangirvan.gml", format=("gml"))
qqqq
misgraph = read.graph("jean-complete.gml", format=("gml"))
ebc <- edge.betweenness.community(misgraph, directed=F)
V(misgraph)$color <- ebc$membership
write.graph(misgraph, "jean-complete-NG.gml", format=("gml"))
